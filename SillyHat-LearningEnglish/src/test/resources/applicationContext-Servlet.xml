<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 在annotation-driven中添加converter -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg ref="utf8Charset" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="utf8Charset" class="java.nio.charset.Charset" factory-method="forName">
		<constructor-arg value="UTF-8" />
	</bean>

	<context:annotation-config />

	<!-- 扫描web包，应用Spring的注解 @Controller -->
	<!--<context:component-scan base-package="com.com.sillyhat.**.web.*" />-->
	<context:component-scan base-package="com.sillyhat" />

<!-- 	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>  -->
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/content/" p:suffix=".jsp" />

	<!-- MessageResolve -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!--<value>message/messages</value>-->
				<value>classpath:message/messages</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动对@AspectJ注解的支持 -->  
	<aop:aspectj-autoproxy/>
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->  
	<!--  proxy-target-class="true" ，说明要代理的是类而不是接口。 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

</beans>
