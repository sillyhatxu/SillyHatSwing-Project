<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sillyhat.learningenglish.business.learningplan.mapper.LearningPlanMapper">

    <select id="queryUserLearningPlanByUserId" parameterType="java.lang.Long" resultType="com.sillyhat.learningenglish.business.learningplan.dto.UserLearningPlanDTO">
        SELECT
            ID AS id,
            USER_ID AS userId,
            WORD_ID AS wordId,
            IS_LEARNING AS isLearning,
            REVIEW_FREQUENCY AS reviewFrequency,
            ERROR_FREQUENCY AS errorFrequency,
            SUCCESS_FREQUENCY AS successFrequency,
            (select USER_NAME from T_USER u where u.ID = t.CREATED_USER) AS createdUserName,
            CREATED_DATE AS createdDate,
            (select USER_NAME from T_USER u where u.ID = t.UPDATED_USER) AS updatedUserName,
            UPDATED_DATE AS updatedDate
        FROM
            T_USER_LEARNING_PLAN t
        WHERE
            t.USER_ID = #{userId}
    </select>

    <select id="queryUserLearningPlanAll" resultType="com.sillyhat.learningenglish.business.learningplan.dto.UserLearningPlanDTO">
        SELECT
            ID AS id,
            USER_ID AS userId,
            WORD_ID AS wordId,
            IS_LEARNING AS isLearning,
            REVIEW_FREQUENCY AS reviewFrequency,
            ERROR_FREQUENCY AS errorFrequency,
            SUCCESS_FREQUENCY AS successFrequency,
            (select USER_NAME from T_USER u where u.ID = t.CREATED_USER) AS createdUserName,
            CREATED_DATE AS createdDate,
            (select USER_NAME from T_USER u where u.ID = t.UPDATED_USER) AS updatedUserName,
            UPDATED_DATE AS updatedDate
        FROM
            T_USER_LEARNING_PLAN t
    </select>

    <insert id="addUserLearningPlan" parameterType="com.sillyhat.learningenglish.business.learningplan.dto.UserLearningPlanDTO">
        insert into T_USER_LEARNING_PLAN
        (
          USER_ID,
          WORD_ID,
          IS_LEARNING,
          REVIEW_FREQUENCY,
          ERROR_FREQUENCY,
          SUCCESS_FREQUENCY,
          CREATED_USER,
          CREATED_DATE,
          UPDATED_USER,
          UPDATED_DATE
        )
        values(
          #{userId},#{wordId},#{isLearning},#{reviewFrequency},#{errorFrequency},#{successFrequency},#{createdUser},datetime('now'),#{updatedUser},datetime('now')
        )
    </insert>

    <update id="updateUserLearningPlan" parameterType="com.sillyhat.learningenglish.business.learningplan.dto.UserLearningPlanDTO">
        update T_USER_LEARNING_PLAN
          set
            USER_ID = #{userId},
            WORD_ID = #{wordId},
            IS_LEARNING = #{isLearning},
            REVIEW_FREQUENCY = #{reviewFrequency},
            ERROR_FREQUENCY = #{errorFrequency},
            SUCCESS_FREQUENCY = #{successFrequency},
            UPDATED_USER = #{updatedUser},
            UPDATED_DATE = datetime('now')
        where ID = #{id}
    </update>


    <select id="getLastTodayPlanByUserId" parameterType="java.lang.Long" resultType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDTO">
        SELECT
          LEARNING_NUM as learningNum,IS_FINISH as isFinish
        FROM
          T_USER_TODAY_PLAN t
        WHERE
          t.CREATED_DATE = (select max(tt.CREATED_DATE) from T_USER_TODAY_PLAN tt WHERE USER_ID = #{userId})
    </select>

    <select id="getTodayPlan" parameterType="java.lang.String" resultType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDTO">
        SELECT
          LEARNING_NUM as learningNum,IS_FINISH as isFinish
        FROM
          T_USER_TODAY_PLAN t
        WHERE
            <![CDATA[
              t.CREATED_DATE >= datetime(#{data}) and t.CREATED_DATE <= datetime(#{nextData})
            ]]>
    </select>

    <insert id="addTodayPlan" parameterType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDTO">
        insert into T_USER_TODAY_PLAN
        (
          USER_ID,
          LEARNING_NUM,
          IS_FINISH,
          CREATED_USER,
          CREATED_DATE,
          UPDATED_USER,
          UPDATED_DATE
        ) values (
          #{userId},#{learningNum},#{isFinish},#{createdUser},datetime('now'),#{updatedUser},datetime('now')
        )
    </insert>

    <update id="updateTodayPlan" parameterType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDTO">
        update T_USER_TODAY_PLAN
        set
            LEARNING_NUM = #{learningNum},
            IS_FINISH = #{isFinish},
            UPDATED_USER = #{updatedUser},
            UPDATED_DATE = datetime('now')
        where ID = #{id}
    </update>

    <select id="queryTodayPlanDetailByTodayPlanId" parameterType="java.lang.Long" resultType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDetailDTO">
        SELECT
          t.ID as id,
          t.TODAY_PLAN_ID as todayPlanId,
          t.WORD_ID as wordId,
          wr.word as word,
          t.IS_ERROR as isError,
          t.OCCURRENCE_NUM as occurrenceNum,
          t.SORT_NUM as sortNum
        FROM
          T_TODAY_PLAN_DETAIL t,T_WORD_REPOSITORY wr
        WHERE t.WORD_ID = wr.ID
          AND TODAY_PLAN_ID = #{todayPlanId}
    </select>

    <insert id="addTodayPlanDetail" parameterType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDetailDTO">
        insert into T_TODAY_PLAN_DETAIL (TODAY_PLAN_ID,WORD_ID,IS_ERROR,OCCURRENCE_NUM,SORT_NUM)
        values (
          #{todayPlanId},#{wordId},#{isError},#{occurrenceNum},#{sortNum}
        )
    </insert>

    <update id="updateTodayPlanDetail" parameterType="com.sillyhat.learningenglish.business.learningplan.dto.TodayPlanDetailDTO">
        update T_TODAY_PLAN_DETAIL set IS_ERROR = #{isError},OCCURRENCE_NUM = #{occurrenceNum} where ID = #{id}
    </update>


    <select id="queryLearningPlanLearningWordList" resultType="com.sillyhat.learningenglish.business.learningplan.dto.UserLearningPlanDTO">
        SELECT
            ID,
            WORD_ID as wordId,
            UPDATED_DATE
        FROM
            T_USER_LEARNING_PLAN
        WHERE IS_LEARNING = 0
          AND USER_ID = #{userId}
        <if test="null != existingWordIdSet">
            AND WORD_ID NOT IN
            <foreach item="item" collection="existingWordIdSet" separator="," open="(" close=")" index="">
                #{item}
            </foreach>
        </if>
        ORDER BY UPDATED_DATE DESC
        LIMIT #{learningNum}
    </select>

    <select id="queryLearningPlanReviewWordList" resultType="com.sillyhat.learningenglish.business.learningplan.dto.UserLearningPlanDTO">
        SELECT
            ID,
            WORD_ID as wordId,
            (ERROR_FREQUENCY - SUCCESS_FREQUENCY) result_num,
            UPDATED_DATE
        FROM
            T_USER_LEARNING_PLAN
        WHERE IS_LEARNING = 1
          AND USER_ID = #{userId}
        <if test="null != existingWordIdSet">
            AND WORD_ID NOT IN
            <foreach item="item" collection="existingWordIdSet" separator="," open="(" close=")" index="">
                #{item}
            </foreach>
        </if>
        ORDER BY result_num DESC,UPDATED_DATE DESC
        LIMIT #{reviewNum}
    </select>


    <delete id="deleteUserTodayPlan">
        DELETE FROM T_USER_TODAY_PLAN
    </delete>

    <delete id="deleteUserTodayPlanDetail">
        DELETE FROM T_TODAY_PLAN_DETAIL
    </delete>

</mapper>
