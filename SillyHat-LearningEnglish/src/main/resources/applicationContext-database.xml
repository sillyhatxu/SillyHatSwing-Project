<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
			</list>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
		<property name="driverClassName" value="${hikaricp.jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${hikaricp.url}"/>
		<!--<property name="username" value="${hikaricp.username}"/>-->
		<!--<property name="password" value="${hikaricp.password}"/>-->
		<!--<property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>-->
		<property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
		<property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
		<property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
		<property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/sillyhat/learningenglish/business/*/mapping/*Mapping.xml" />
	</bean>

	<!-- 采用自动扫描方式创建mapper bean(单个更新模式) -->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sillyhat.learningenglish.business.*.mapper" />
	</bean>

	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="auto*">PROPAGATION_REQUIRED,-Exception</prop>
				<!--<prop key="*">readOnly</prop>-->
			</props>
		</property>
	</bean>

	<!-- 自动代理 -->
	<bean id="autoproxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*ServiceImpl</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<!--<value>beforeAdvice</value>-->
				<value>transactionInterceptor</value>
				<!--<value>afterAdvice</value>-->
			</list>
		</property>
	</bean>

</beans>
